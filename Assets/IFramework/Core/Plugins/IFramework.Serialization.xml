<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IFramework.Serialization</name>
    </assembly>
    <members>
        <member name="T:IFramework.Serialization.DataTable.DataColumnIndexAttribute">
            <summary>
            数据列
            </summary>
        </member>
        <member name="P:IFramework.Serialization.DataTable.DataColumnIndexAttribute.index">
            <summary>
            所在列
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataColumnIndexAttribute.#ctor(System.Int32)">
            <summary>
            ctor
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:IFramework.Serialization.DataTable.DataTableTool">
            <summary>
            DataTable
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataTableTool.CreateReader(System.IO.TextReader,IFramework.Serialization.DataTable.IDataRow,IFramework.Serialization.DataTable.IDataExplainer)">
            <summary>
            创建数据读取器
            </summary>
            <param name="streamReader"></param>
            <param name="rowReader"></param>
            <param name="explainer"></param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataTableTool.CreateReader(System.String,IFramework.Serialization.DataTable.IDataRow,IFramework.Serialization.DataTable.IDataExplainer)">
            <summary>
            创建数据读取器
            </summary>
            <param name="text"></param>
            <param name="rowReader"></param>
            <param name="explainer"></param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataTableTool.CreateWriter(System.IO.TextWriter,IFramework.Serialization.DataTable.IDataRow,IFramework.Serialization.DataTable.IDataExplainer)">
            <summary>
            创建数据写入器
            </summary>
            <param name="streamWriter"></param>
            <param name="rowWriter"></param>
            <param name="explainer"></param>
            <returns></returns>
        </member>
        <member name="T:IFramework.Serialization.DataTable.DataColumn">
            <summary>
            每一个格子
            </summary>
        </member>
        <member name="F:IFramework.Serialization.DataTable.DataColumn.headLineName">
            <summary>
            标题名称
            </summary>
        </member>
        <member name="F:IFramework.Serialization.DataTable.DataColumn.strValue">
            <summary>
            string 数据
            </summary>
        </member>
        <member name="T:IFramework.Serialization.DataTable.DataColumnNameAttribute">
            <summary>
            设置数据表标题
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataColumnNameAttribute.#ctor(System.String)">
            <summary>
            ctor
            </summary>
            <param name="name">名称</param>
        </member>
        <member name="P:IFramework.Serialization.DataTable.DataColumnNameAttribute.name">
            <summary>
            名称
            </summary>
        </member>
        <member name="T:IFramework.Serialization.DataTable.DataExplainer">
            <summary>
            string 解释器
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataExplainer.#ctor(System.String,System.String)">
            <summary>
            ctor
            </summary>
            <param name="dot">替换逗号的字符</param>
            <param name="quotes">替换双引号的字符</param>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataExplainer.CreatInstance``1">
            <summary>
            创建实例
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataExplainer.CreatInstance``1(System.Collections.Generic.List{IFramework.Serialization.DataTable.DataColumn},System.Collections.Generic.Dictionary{System.Reflection.MemberInfo,System.String})">
            <summary>
            根据格子反序列化一个实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cols"></param>
            <param name="membersDic">需要反序列化的成员</param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataExplainer.GetColumns``1(``0,System.Collections.Generic.Dictionary{System.Reflection.MemberInfo,System.String})">
            <summary>
            根据 具体类型 获取单个数据格子数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <param name="membersDic">需要序列化的成员</param>
            <returns></returns>
        </member>
        <member name="T:IFramework.Serialization.DataTable.DataIgnoreAttribute">
            <summary>
            数据表忽略的成员
            </summary>
        </member>
        <member name="T:IFramework.Serialization.DataTable.DataReader">
            <summary>
            数据表读者
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataReader.#ctor(System.IO.TextReader,IFramework.Serialization.DataTable.IDataRow,IFramework.Serialization.DataTable.IDataExplainer)">
            <summary>
            Ctor
            </summary>
            <param name="streamReader">流读者</param>
            <param name="rowReader">行读者</param>
            <param name="explainer">数据解释器</param>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataReader.#ctor(System.String,IFramework.Serialization.DataTable.IDataRow,IFramework.Serialization.DataTable.IDataExplainer)">
            <summary>
            Ctor
            </summary>
            <param name="text">数据表字符串</param>
            <param name="rowReader">行读者</param>
            <param name="explainer">数据解释器</param>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataReader.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataReader.Get``1">
            <summary>
            获取一张表数据
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:IFramework.Serialization.DataTable.DataRow">
            <summary>
            数据行
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataRow.ReadLine(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            读取一行
            </summary>
            <param name="val">行String</param>
            <param name="headNames">标题行</param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataRow.SpilitRow(System.String)">
            <summary>
            切割一行
            </summary>
            <param name="val"></param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataRow.ReadHeadLine(System.String)">
            <summary>
            读取标题行
            </summary>
            <param name="val">行String</param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataRow.WriteLine(System.Collections.Generic.List{IFramework.Serialization.DataTable.DataColumn})">
            <summary>
            写入一行
            </summary>
            <param name="cols">写入的信息</param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataRow.WriteHeadLine(System.Collections.Generic.List{System.String})">
            <summary>
            写入标题行
            </summary>
            <param name="headNames">写入的标题</param>
            <returns></returns>
        </member>
        <member name="T:IFramework.Serialization.DataTable.DataWriter">
            <summary>
            数据写入者
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataWriter.#ctor(System.IO.TextWriter,IFramework.Serialization.DataTable.IDataRow,IFramework.Serialization.DataTable.IDataExplainer)">
            <summary>
            Ctor
            </summary>
            <param name="streamWriter">流写者</param>
            <param name="rowWriter">行写者</param>
            <param name="explainer">数据解释器</param>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataWriter.#ctor(IFramework.Serialization.DataTable.IDataRow,IFramework.Serialization.DataTable.IDataExplainer)">
            <summary>
            Ctor
            </summary>
            <param name="rowWriter">行写者</param>
            <param name="explainer">数据解释器</param>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataWriter.Dispose">
            <summary>
            释放
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataWriter.WriteString``1(System.Collections.Generic.List{``0})">
            <summary>
            写入到string
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source">数据</param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.DataWriter.Write``1(System.Collections.Generic.List{``0})">
            <summary>
            写入一个表
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
        </member>
        <member name="T:IFramework.Serialization.DataTable.IDataExplainer">
            <summary>
            string 解释器
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.IDataExplainer.CreatInstance``1(System.Collections.Generic.List{IFramework.Serialization.DataTable.DataColumn},System.Collections.Generic.Dictionary{System.Reflection.MemberInfo,System.String})">
            <summary>
            根据格子反序列化一个实例
            </summary>
            <typeparam name="T"></typeparam>
            <param name="cols"></param>
            <param name="membersDic">需要反序列化的成员</param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.IDataExplainer.GetColumns``1(``0,System.Collections.Generic.Dictionary{System.Reflection.MemberInfo,System.String})">
            <summary>
            根据 具体类型 获取单个数据格子数据
            </summary>
            <typeparam name="T"></typeparam>
            <param name="t"></param>
            <param name="membersDic">需要序列化的成员</param>
            <returns></returns>
        </member>
        <member name="T:IFramework.Serialization.DataTable.IDataReader">
            <summary>
            数据读取器
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.IDataReader.Get``1">
            <summary>
            获取
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:IFramework.Serialization.DataTable.IDataRow">
            <summary>
            数据行
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.IDataRow.ReadLine(System.String,System.Collections.Generic.List{System.String})">
            <summary>
            读取一行
            </summary>
            <param name="val">行String</param>
            <param name="headNames">标题行</param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.IDataRow.ReadHeadLine(System.String)">
            <summary>
            读取标题行
            </summary>
            <param name="val">行String</param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.IDataRow.WriteLine(System.Collections.Generic.List{IFramework.Serialization.DataTable.DataColumn})">
            <summary>
            写入一行
            </summary>
            <param name="cols">写入的信息</param>
            <returns></returns>
        </member>
        <member name="M:IFramework.Serialization.DataTable.IDataRow.WriteHeadLine(System.Collections.Generic.List{System.String})">
            <summary>
            写入标题行
            </summary>
            <param name="headNames">写入的标题</param>
            <returns></returns>
        </member>
        <member name="T:IFramework.Serialization.DataTable.IDataWriter">
            <summary>
            数据写入器
            </summary>
        </member>
        <member name="M:IFramework.Serialization.DataTable.IDataWriter.Write``1(System.Collections.Generic.List{``0})">
            <summary>
            写入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
        </member>
        <member name="M:IFramework.Serialization.DataTable.IDataWriter.WriteString``1(System.Collections.Generic.List{``0})">
            <summary>
            写入
            </summary>
            <typeparam name="T"></typeparam>
            <param name="source"></param>
            <returns></returns>
        </member>
    </members>
</doc>
